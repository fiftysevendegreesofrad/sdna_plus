name: 
  Run the regression tests.

description:
  Diff the output from the test steps, against correctout*.txt
  
inputs:
  python_version:
    required: false
    default: "3.12"
    description: 'The tests pass on Python 2.7 and Python 3.5, ..., 3.12'

  shell:
    required: false
    default: cmd
    description: The shell to run the test commands in, e.g. cmd, powershell, bash.

  DONT_TEST_N_LINK_SUBSYSTEMS_ORDER:
    required: true
    description: "Non-empty string: In correctout_prep.txt, allow output lines of the form: -link subsystem contains link with id = , to be in any order.  Empty string ('') : require the orders of the lines to match."
  
  ALLOW_NEGATIVE_FORMULA_ERROR_ON_ANY_LINK_PRESENT:
    required: true
    description: "The negative formula is on all links, but the tests strictly require the first error to raised to be for the same link as in the original run. "

  sdnadll:
    description: 'The path to the sdna_vs2008.dll of the installation to be tested.'
    required: true

  USED_ZIG:
    description: 'Was the sDNA being tested built with Zig C++?'
    required: false
    default: ''

  sdna_installed_in_python_env:
    description: 'Test the sDNA .dll or .so installed in the Python environment, e.g. in a venv, from a Wheel installed by pip'
    required: false
    default: ''

  sdna_bin_dir:
    description: 'The path to the python entry point files (sdnaintegral.py) to be tested.  Default: (dirname $sdnadll)/../bin/'
    required: false
    default: ''

  sdna_debug:
    description: "'' (empty string): filter out the lines in correctout*.txt that are only output by debug builds. Non-empty string: don't. "
  
  # install_PyShp:
  #   description: 'Whether to install PyShp in the test environment or not (e.g. if it is already bundled in the test installation).'
  #   required: false
  #   default: true

  pytest_dir:
    description: "The directory to run Pytest in"
    required: false
    default: "./sDNA/sdna_vs2008/tests/pytest"

runs:
  using: "composite"
  steps:
    - uses: LizardByte/setup-python-action@master
      with:
        python-version: ${{ inputs.python_version }}


    # Windows only version specifier in R_full.txt
    - name: Install sDNA.
      if: ${{ inputs.sdna_installed_in_python_env }}
      shell: bash
      run: >
        pip
        install
        ${{ inputs.python_version == '3.5' && '--trusted-host pypi.python.org' || '' }}
        dist/sdna_plus*.whl
        -r requirements/R_full.txt

    # All builds require PyTest and Numpy
    - name: Install Pytest, and Numpy (the latter for sDNA Learn & Predict, Python 3.5 only).
      shell: bash
      run: >
        pip
        install
        ${{ inputs.python_version == '3.5' && '--trusted-host pypi.python.org' || ' ' }}
        pytest
        -r requirements/learn-predict.txt

    # - name: Install sDNA.
    #   if: inputs.sdna_installed_in_python_env
    #   shell: bash
    #   run: pip install --no-deps dist/sdna_plus*.whl


    - name: Show versions.
      shell: ${{ inputs.shell }}
      working-directory: '${{ inputs.pytest_dir }}'
      run: |
        python --version
        python -c "import numpy; print(numpy.__version__)"
        python -c "import shapefile; print(shapefile.__version__)"
        python -m pytest --version

     
    # - name: Run debug_test.py directly.
    #   shell: cmd
    #   working-directory: './sDNA/sdna_vs2008/tests'
    #   # run: python -u debug_test.py
    #   run: set "sdnadll=c:\Program Files (x86)\sDNA\x64\sdna_vs2008.dll" & python -u debug_test.py

    # - name: Run diff test number 0 directly via
    #   test_gathering_windows_command_line_tests.py, by test index
    #   working-directory: './sDNA/sdna_vs2008/tests/pytest'
    #   run: python test_gathering_windows_command_line_tests.py 0

    - name: Run all the diff tests with Pytest.
      shell: ${{ inputs.shell }}
      working-directory: ${{ inputs.pytest_dir }}
      env:
        DONT_TEST_N_LINK_SUBSYSTEMS_ORDER: ${{ inputs.DONT_TEST_N_LINK_SUBSYSTEMS_ORDER }}
        ALLOW_NEGATIVE_FORMULA_ERROR_ON_ANY_LINK_PRESENT: ${{ inputs.ALLOW_NEGATIVE_FORMULA_ERROR_ON_ANY_LINK_PRESENT }}
        SDNA_INSTALLED_IN_PYTHON_ENV: ${{ inputs.sdna_installed_in_python_env }}
        sdnadll: ${{ inputs.sdnadll }}
        sdna_bin_dir: ${{ inputs.sdna_bin_dir }}
        sdna_debug: ${{ inputs.sdna_debug }}
        USED_ZIG: ${{ inputs.USED_ZIG }}
      run: pytest -rA --tb=short
      # -rA shows summary of tests, one per line, even when they all pass.
      #
      # To run the same tests locally, the command is something like:
      # run: >
      #   set "sdnadll=c:\Program Files (x86)\sDNA\x64\sdna_vs2008.dll" &
      #   set "sdna_bin_dir=c:\Program Files (x86)\sDNA\bin" &
      #   set sdna_debug=False &
      #   set DONT_TEST_N_LINK_SUBSYSTEMS_ORDER=1 &
      #   set ALLOW_NEGATIVE_FORMULA_ERROR_ON_ANY_LINK_PRESENT=1 &
      #   pytest -rA
