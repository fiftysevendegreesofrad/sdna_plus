name: "Compile with CMake, MSBuild and VS 2022 for Windows"

on:
  workflow_dispatch:

  push:
    branches: [ "CMake_no_R", "No_R_CMake_(Boost_1.83)"]

  pull_request:
    branches: [ "CMake_no_R" ]

env:
  CONFIGURATION: Release
  PLATFORM: x64
  BOOST_VERSION: '1.8.3'


jobs:
  build_and_upload_installer:
    name: Try to compile on windows with CMake
    runs-on: windows-2022
    # outputs:
    #   installer_file_name: ${{ steps.output_installer_file_name.outputs.name }}
    steps:
    - uses: actions/checkout@v4




    - name: 'Add "C:\Program Files\Microsoft Visual Studio\2022\Enterprise\VC\bin" to path'
      shell: bash
      run: echo "C:\Program Files\Microsoft Visual Studio\2022\Enterprise\VC\bin" >> $GITHUB_PATH


    - name: Add msbuild to PATH
      uses: microsoft/setup-msbuild@v2

    # - name: Integrate vcpkg with Visual Studio
    #   run: vcpkg integrate install




    - name: Restore vcpkg Deps
      id: cache-vcpkg-deps-restore
      uses: actions/cache/restore@v4
      with:
        path: |
          C:\vcpkg\
          D:\a\sdna_plus\sdna_plus\vcpkg_installed\
          D:\a\sdna_plus\sdna_plus\sDNA\sdna_vs2008\vcpkg_installed\
          C:\Users\runneradmin\AppData\Local\vcpkg\
          D:\a\sdna_plus\sdna_plus\build_cmake\vcpkg_installed
        key: ${{ github.ref_name }}-${{ runner.os }}-${{ hashFiles('vcpkg.json', 'vcpkg-configuration.json') }}


    # - name: Install Boost etc. from vcpkg.json
    #   if: steps.cache-vcpkg-deps-restore.outputs.cache-hit != 'true'
    #   run: vcpkg install

    - name: Create Visual Studio build system from CMake
      shell: cmd
      working-directory: ${{ github.workspace }}\sDNA\sdna_vs2008
      run: |
        set VCPKG_ROOT=%VCPKG_INSTALLATION_ROOT%
        .\create_build_system.bat

    - name: Build sDNA
      shell: cmd
      working-directory: ${{ github.workspace }}\sDNA\sdna_vs2008
      run: |
        set VCPKG_ROOT=%VCPKG_INSTALLATION_ROOT%
        .\build.bat

    - name: Cache vcpkg Deps
      if: steps.cache-vcpkg-deps-restore.outputs.cache-hit != 'true'
      id: cache-deps-save
      uses: actions/cache/save@v4
      with:
        path: |
          C:\vcpkg\
          D:\a\sdna_plus\sdna_plus\vcpkg_installed\
          D:\a\sdna_plus\sdna_plus\sDNA\sdna_vs2008\vcpkg_installed\
          C:\Users\runneradmin\AppData\Local\vcpkg\
          D:\a\sdna_plus\sdna_plus\build_cmake\vcpkg_installed

        key: ${{ steps.cache-vcpkg-deps-restore.outputs.cache-primary-key }}
    # - name: Output the name of the .msi installer file
    #   id: output_installer_file_name
    #   shell: bash
    #   run: echo "name=$(ls sDNA_setup_win_v*.msi)" >> "$GITHUB_OUTPUT"  

    - name: upload output dir
      id: installer-upload-step
      uses: actions/upload-artifact@v4
      with:
        name: sDNA_DLLs_and_debug_symbols
        # this file name pattern is defined in installerbits\rename_version.py
        # outfilename = os.path.join(outputdir, "sDNA_setup_win_v%s.msi" % filename_friendly_version)
        path: build_cmake\x64\*
